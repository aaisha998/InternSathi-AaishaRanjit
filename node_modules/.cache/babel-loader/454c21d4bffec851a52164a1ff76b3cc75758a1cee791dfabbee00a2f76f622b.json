{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { toast } from \"react-toastify\";\n\n// export interface AllProduct {\n//   id: number;\n//   title: string;\n//   price: string;\n//   category: string;\n//   description: string;\n//   image: string;\n// }\nexport const GetAllProduct = id => {\n  const url = id ? `https://fakestoreapi.com/products/${id}` : \"https://fakestoreapi.com/products\";\n  return axios.get(url).then(res => res.data);\n};\n_c = GetAllProduct;\nexport const useAllProduct = id => {\n  _s();\n  const queryKey = id ? `product_${id}` : \"allProducts\";\n  toast.success(\"Failed to Product\");\n  return useQuery(id ? `https://fakestoreapi.com/products/${id}` : \"https://fakestoreapi.com/products\", () => GetAllProduct(id), {\n    onError: err => {\n      \"Failed to Product\";\n    }\n  });\n};\n_s(useAllProduct, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nvar _c;\n$RefreshReg$(_c, \"GetAllProduct\");","map":{"version":3,"names":["axios","useQuery","toast","GetAllProduct","id","url","get","then","res","data","_c","useAllProduct","_s","queryKey","success","onError","err","$RefreshReg$"],"sources":["/home/aaisha/Project/frontend-assignment/react-typescript-tut/src/components/Api/GetApi.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { toast } from \"react-toastify\";\n\n// export interface AllProduct {\n//   id: number;\n//   title: string;\n//   price: string;\n//   category: string;\n//   description: string;\n//   image: string;\n// }\nexport interface SingleProduct {\n  id: number;\n  title: string;\n  price: string;\n  category: string;\n  description: string;\n  image: string;\n  rating?: {\n    rate: number;\n    count: number;\n  };\n}\nexport const GetAllProduct = (id?: number) => {\n  const url = id\n    ? `https://fakestoreapi.com/products/${id}`\n    : \"https://fakestoreapi.com/products\";\n  return axios.get(url).then((res) => res.data);\n};\n\nexport const useAllProduct = (id?: number) => {\n  const queryKey = id ? `product_${id}` : \"allProducts\";\n  toast.success(\"Failed to Product\");\n  return useQuery<SingleProduct[]>(\n    id\n      ? `https://fakestoreapi.com/products/${id}`\n      : \"https://fakestoreapi.com/products\",\n    () => GetAllProduct(id),\n    {\n      onError: (err: any) => {\n        \"Failed to Product\";\n      },\n    }\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA,OAAO,MAAMC,aAAa,GAAIC,EAAW,IAAK;EAC5C,MAAMC,GAAG,GAAGD,EAAE,GACT,qCAAoCA,EAAG,EAAC,GACzC,mCAAmC;EACvC,OAAOJ,KAAK,CAACM,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC;AAC/C,CAAC;AAACC,EAAA,GALWP,aAAa;AAO1B,OAAO,MAAMQ,aAAa,GAAIP,EAAW,IAAK;EAAAQ,EAAA;EAC5C,MAAMC,QAAQ,GAAGT,EAAE,GAAI,WAAUA,EAAG,EAAC,GAAG,aAAa;EACrDF,KAAK,CAACY,OAAO,CAAC,mBAAmB,CAAC;EAClC,OAAOb,QAAQ,CACbG,EAAE,GACG,qCAAoCA,EAAG,EAAC,GACzC,mCAAmC,EACvC,MAAMD,aAAa,CAACC,EAAE,CAAC,EACvB;IACEW,OAAO,EAAGC,GAAQ,IAAK;MACrB,mBAAmB;IACrB;EACF,CACF,CAAC;AACH,CAAC;AAACJ,EAAA,CAdWD,aAAa;EAAA,QAGjBV,QAAQ;AAAA;AAAA,IAAAS,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}